HOW TO BACKUP EVERYTHING

SQL files are ASCII files with mysql commands that construct/populate databases and tables.  They can be sourced by mysql from the shell or the mysql CL.

You will need the mysql root password.

tag=`date -Iminutes`
savedir=/home/developer/Software/mysql  # schema backups to track in git
skeedir=$savedir/local-schema  # skeema-style backup for pushing changes
backupdir=/tmp  # full backups to protect against mistakes


1. FULL BACKUP (do before making or pushing ANY changes to a db with important DATA)

mysqldump -u root -p --all-databases > $backupdir/mysql-fullbackup_$tag.sql
mysqldump -u root -p mysql user > $backupdir/mysql-allusers_$tag.sql


2. SCHEMA and USER BACKUP (use to log changes to dev version)

mysqlpump -u root -p --exclude-databases=% --add-drop-user --users > $savedir/pump-all-users_privileges.sql  # dump and pump are different commands, not a typo

Use --no-data option to backup schema only (table structures, no entries):

mysqldump -u root -p --no-data --all-databases > $savedir/mysql-allschema.sql

cd $skeedir
skeema pull local -p
cd $savedir

~~ Now commit changes to git ~~


3. PUSHING SCHEMA CHANGES TO REMOTE

cd $skeedir
skeema diff deploy -p  # Compares local copy to remote schema
skeema push deploy -p  # Replaces remote schema with local copy.  !! CAN'T UNDO !!

Skeema will warn about changes that lose data.  Add --allow-unsafe if you're sure you want to make an unsafe change.

To delete a table and push the change, just delete the table's .SQL file in $skeedir.

Advanced skeema usage:  https://www.skeema.io/docs/commands/


4. RESTORING from SQL files

mysql -u root -p
mysql> use ngps  # if restoring only a particular db, e.g. ngps
mysql> source SQLFILE.SQL;   
mysql> flush privileges;

Alternatively,

mysql -u root -p  < SQLFILE.SQL
mysql -u root -p ngps < SQLFILE.SQL   # e.g. restoring for the ngps database only
mysql -u root -p -e "flush privileges;"  # if updating user settings

You may need to first create empty databases with the correct names e.g. ngps.

Verify users

mysql> use mysql
mysql> select Host, user from mysql.user ;
mysql> SHOW GRANTS FOR '<username>'@'localhost';

