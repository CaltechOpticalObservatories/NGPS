/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package edu.caltech.palomar.instruments.ngps.gui;
import edu.caltech.palomar.instruments.ngps.dbms.NGPSdatabase;
import edu.caltech.palomar.instruments.ngps.dbms.SQLTable;

import java.sql.*;
import java.text.ParseException; 
import java.text.SimpleDateFormat; 
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JFrame;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.JScrollPane;
/**
 *
 * @author Chaz Shapiro, JPL
 */
public class OpenFrame extends javax.swing.JFrame {
    public NGPSdatabase      dbms;
    public SQLTable          user_targets;
    public String            MYSQLDB;
    public String            TARGET_TABLE;
    public JTable           finalTable;

    /**
     * Creates new Frame
     */
    public OpenFrame(NGPSdatabase db, String username) {
        dbms = db;
        MYSQLDB = dbms.MYSQLDB;
        TARGET_TABLE = dbms.TARGET_TABLE;
        setTitle("All of User's targets");
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);       
        setVisible(true);

        // CONNECT TO DB
//		try {
//                    // below two lines are used for connectivity.
//                    Class.forName("com.mysql.cj.jdbc.Driver").newInstance();
//                    connection = DriverManager.getConnection(
//                            "jdbc:mysql://localhost:3306/ngps",
//                            "gui", "Write1Spec2.!");
//		}
//		catch (Exception exception) {
//			System.out.println(exception);
//		}

        try{
            dbms.queryObservationSets(dbms.getOWNER());
            
            // GET TARGET TABLE FROM MYSQL QUERY
            Statement statement = dbms.conn.createStatement();
            String query = "SELECT set_id, state, target_number, name FROM targets WHERE owner = '%s';";
            ResultSet resultSet = statement.executeQuery(String.format(query, username)); //HARDCODE

            // Construct table from query results
            user_targets = new SQLTable(resultSet);
            resultSet.close();
            statement.close();
            
            HashMap<Object,Integer> set_count = new HashMap<>();
            HashMap<Object,Object> set_name = new HashMap<>();
            
            for(int row=0; row<user_targets.getRowCount(); row++){
                Object rowid = user_targets.getValueAt(row, "set_id");
                if(!set_count.containsKey(rowid)){
                    set_count.put(rowid, 1);
                    set_name.put(rowid, dbms.getSetNameFromID( (Integer)rowid ) );
                } else{
                    set_count.put(rowid, set_count.get(rowid)+1);
                }
            }
                        
            DefaultTableModel dtm = new DefaultTableModel();
            finalTable = new JTable(dtm);
            for(String colname : new String[]{"List ID","List Name","Size"}){
                dtm.addColumn(colname);
            }
            for(Object k : set_count.keySet()){
                dtm.addRow(new Object[]{k, set_name.get(k), set_count.get(k)});
            }
                        
            System.out.println("----- SET SIZE -----");
            
        }
        catch (Exception exception) { System.out.println(exception); }

        initComponents(); // Loads JTable/SQLtable into frame
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane(finalTable, JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED, JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 797, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
