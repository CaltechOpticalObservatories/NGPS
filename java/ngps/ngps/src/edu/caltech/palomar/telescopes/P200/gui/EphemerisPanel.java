package edu.caltech.palomar.telescopes.P200.gui;
//=== File Prolog =============================================================
//	This code was developed by John Thorstensen of Dartmouth University
//
//      It has been refactored and modified by Jennifer Milburn for
//      use at the Palomar Observatory.
//
//      Caltech Optical Observatories, Palomar Observatory
//
//--- Contents ----------------------------------------------------------------
//    EphemerisPanel   - Display panel for the output of the JSkyCalcModel
//
//--- Description -------------------------------------------------------------
//--- Notes -------------------------------------------------------------------
//
//--- Development History -----------------------------------------------------
//       DERIVED DIRECTLY FROM THE JSKYCALC by JOHN THORSTENSEN, Dartmouth University
//       Original Implementation : John Thorstensen copyright 2007,
//
//       August 5, 2010  Jennifer Milburn, refactor for use at the Palomar Observatory
//
//
//   JSkyCalc24m.java -- 2009 January.  I liked the 1.3m so much I decided
//   to do something similar for the 2.4m.  This has the capability of reading
//   the telescope coords and commenting on them, but it doesn't slew the
//   telescope.  It'll be nice to automatically have the telescope coords there,
//   though. */
//
// JSkyCalc13m.java -- 2009 January.  This version adds an interface to
// * Dick Treffers' 1.3m telescope control server, which communicates via
// * the BAIT protocol.  The target-selection facilities here can then be
// * used. */
//
// JSkyCalc.java -- copyright 2007, John Thorstensen, Dartmouth College. */
//
// TERMS OF USE --
// Anyone is free to use this software for any purpose, and to
// modify it for their own purposes, provided that credit is given to the author
// in a prominent place.  For the present program that means that the green
// title and author banner appearing on the main window must not be removed,
// and may not be altered without premission of the author.
//
//--- DISCLAIMER---------------------------------------------------------------
//
//	This software is provided "as is" without any warranty of any kind, either
//	express, implied, or statutory, including, but not limited to, any
//	warranty that the software will conform to specification, any implied
//	warranties of merchantability, fitness for a particular purpose, and
//	freedom from infringement, and any warranty that the documentation will
//	conform to the program, or any warranty that the software will be error
//	free.
//
//	In no event shall Caltech be liable for any damages, including, but not
//	limited to direct, indirect, special or consequential damages, arising out
//	of, resulting from, or in any way connected with this software, whether or
//	not based upon warranty, contract, tort or otherwise, whether or not
//	injury was sustained by persons or property or otherwise, and whether or
//	not loss was sustained from or arose out of the results of, or use of,
//	their software or services provided hereunder.
//
//=== End File Prolog =========================================================
import edu.caltech.palomar.telescopes.P200.TelescopeObject;
import edu.caltech.palomar.telescopes.P200.P200Component;
import edu.dartmouth.jskycalc.JSkyCalcModel;
import java.beans.*;
/*=============================================================================================
/      Class Declaration: EphemerisPanel
/=============================================================================================*/
public class EphemerisPanel extends javax.swing.JPanel {
    JSkyCalcModel myJSkyCalcModel;
    /** Creates new form EphemerisPanel */
    public EphemerisPanel() {
        initComponents();
    }
/*================================================================================================
/     setJSkyCalcModel(JSkyCalcModel newJSkyCalcModel)
/=================================================================================================*/
 public void setJSkyCalcModel(JSkyCalcModel newJSkyCalcModel){
     myJSkyCalcModel = newJSkyCalcModel;
     myJSkyCalcModel.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
      public void propertyChange(java.beans.PropertyChangeEvent e) {
          Ephemeris_propertyChange(e);
       }
     });
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        observatoryparamlabel = new javax.swing.JLabel();
        equinoxlabel = new javax.swing.JLabel();
        airmasslabel = new javax.swing.JLabel();
        azimuthlabel = new javax.swing.JLabel();
        antiparallacticlabel = new javax.swing.JLabel();
        sundeclabel = new javax.swing.JLabel();
        sunazimuthlabel = new javax.swing.JLabel();
        ztwilightlabel = new javax.swing.JLabel();
        lunarskybrightlabel = new javax.swing.JLabel();
        moondeclabel = new javax.swing.JLabel();
        moonazimuthlabel = new javax.swing.JLabel();
        moonillumfraclabel = new javax.swing.JLabel();
        moonphaselabel = new javax.swing.JLabel();
        moonobjanglabel = new javax.swing.JLabel();
        barjdlabel = new javax.swing.JLabel();
        baryvcorlabel = new javax.swing.JLabel();
        constellationlabel = new javax.swing.JLabel();
        planetproximlabel = new javax.swing.JLabel();
        siderialfield = new javax.swing.JTextField();
        airmassfield = new javax.swing.JTextField();
        sunrafield = new javax.swing.JTextField();
        jdfield = new javax.swing.JTextField();
        moonrafield = new javax.swing.JTextField();
        sunaltfield = new javax.swing.JTextField();
        lunarskybrightfield = new javax.swing.JTextField();
        sunazfield = new javax.swing.JTextField();
        moonaltfield = new javax.swing.JTextField();
        moonazfield = new javax.swing.JTextField();
        constellationfield = new javax.swing.JTextField();
        parallacticfield = new javax.swing.JTextField();
        antiparallacticfield = new javax.swing.JTextField();
        moonobjanglefield = new javax.swing.JTextField();
        moonillumfield = new javax.swing.JTextField();
        ztwilightfield = new javax.swing.JTextField();
        moonphasefield = new javax.swing.JTextField();
        planetproximfield = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        altitudefield = new javax.swing.JTextField();
        sundecfield = new javax.swing.JTextField();
        moondecfield = new javax.swing.JTextField();
        baryjdfield = new javax.swing.JTextField();
        baryvcorfield = new javax.swing.JTextField();
        azimuthfield = new javax.swing.JTextField();
        sideriallabel1 = new javax.swing.JLabel();
        declabel = new javax.swing.JLabel();
        jdlabel = new javax.swing.JLabel();
        equinoxfield = new javax.swing.JTextField();
        RAfield = new javax.swing.JTextField();
        altitudelabel = new javax.swing.JLabel();
        sunralabel = new javax.swing.JLabel();
        moonralabel = new javax.swing.JLabel();
        sunaltlabel = new javax.swing.JLabel();
        moonaltlabel = new javax.swing.JLabel();
        parallacticlabel1 = new javax.swing.JLabel();
        ralabel = new javax.swing.JLabel();
        observatorylabel = new javax.swing.JLabel();
        latitudelabel = new javax.swing.JLabel();
        longitudelabel = new javax.swing.JLabel();
        elevsealevellabel = new javax.swing.JLabel();
        sideriallabel9 = new javax.swing.JLabel();
        decfield = new javax.swing.JTextField();
        observatoryfield = new javax.swing.JTextField();
        latitudefield = new javax.swing.JTextField();
        longitudefield = new javax.swing.JTextField();
        elevseafield = new javax.swing.JTextField();
        elevhorizonlabel = new javax.swing.JLabel();
        localdatelabel = new javax.swing.JLabel();
        utdatelabel = new javax.swing.JLabel();
        uttimelabel = new javax.swing.JLabel();
        timelabel = new javax.swing.JLabel();
        elevhorizonfield = new javax.swing.JTextField();
        utdatefield = new javax.swing.JTextField();
        uttimefield = new javax.swing.JTextField();
        localdatefield = new javax.swing.JTextField();
        localtimelabel = new javax.swing.JLabel();
        localtimefield = new javax.swing.JTextField();
        HAlabel1 = new javax.swing.JLabel();
        hafield = new javax.swing.JTextField();
        objectnamelabel = new javax.swing.JLabel();
        objectnamefield = new javax.swing.JTextField();
        timelabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jdlabel1 = new javax.swing.JLabel();

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setBackground(new java.awt.Color(0, 0, 0));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 153, 0), 5));
        setForeground(new java.awt.Color(51, 255, 0));

        observatoryparamlabel.setFont(new java.awt.Font("Arial", 3, 18));
        observatoryparamlabel.setForeground(new java.awt.Color(0, 255, 255));
        observatoryparamlabel.setText("Observatory Parameters");

        equinoxlabel.setFont(new java.awt.Font("Arial", 1, 14));
        equinoxlabel.setForeground(new java.awt.Color(0, 255, 255));
        equinoxlabel.setText("Equinox");

        airmasslabel.setFont(new java.awt.Font("Arial", 1, 14));
        airmasslabel.setForeground(new java.awt.Color(0, 255, 255));
        airmasslabel.setText("Airmass");

        azimuthlabel.setFont(new java.awt.Font("Arial", 1, 14));
        azimuthlabel.setForeground(new java.awt.Color(0, 255, 255));
        azimuthlabel.setText("Azimuth");

        antiparallacticlabel.setFont(new java.awt.Font("Arial", 1, 14));
        antiparallacticlabel.setForeground(new java.awt.Color(0, 255, 255));
        antiparallacticlabel.setText("antiparallactic");

        sundeclabel.setFont(new java.awt.Font("Arial", 1, 14));
        sundeclabel.setForeground(new java.awt.Color(0, 255, 255));
        sundeclabel.setText("Sun dec");

        sunazimuthlabel.setFont(new java.awt.Font("Arial", 1, 14));
        sunazimuthlabel.setForeground(new java.awt.Color(0, 255, 255));
        sunazimuthlabel.setText("Sun Azimuth");

        ztwilightlabel.setFont(new java.awt.Font("Arial", 1, 14));
        ztwilightlabel.setForeground(new java.awt.Color(0, 255, 255));
        ztwilightlabel.setText("ZTwiight");

        lunarskybrightlabel.setFont(new java.awt.Font("Arial", 1, 14));
        lunarskybrightlabel.setForeground(new java.awt.Color(0, 255, 255));
        lunarskybrightlabel.setText("Lunar Sky Bright");

        moondeclabel.setFont(new java.awt.Font("Arial", 1, 14));
        moondeclabel.setForeground(new java.awt.Color(0, 255, 255));
        moondeclabel.setText("Moon dec");

        moonazimuthlabel.setFont(new java.awt.Font("Arial", 1, 14));
        moonazimuthlabel.setForeground(new java.awt.Color(0, 255, 255));
        moonazimuthlabel.setText("Moon Azimuth");

        moonillumfraclabel.setFont(new java.awt.Font("Arial", 1, 14));
        moonillumfraclabel.setForeground(new java.awt.Color(0, 255, 255));
        moonillumfraclabel.setText("Moon Illum Frac");

        moonphaselabel.setFont(new java.awt.Font("Arial", 1, 18));
        moonphaselabel.setForeground(new java.awt.Color(0, 255, 255));
        moonphaselabel.setText("Moon Phase");

        moonobjanglabel.setFont(new java.awt.Font("Arial", 1, 14));
        moonobjanglabel.setForeground(new java.awt.Color(0, 255, 255));
        moonobjanglabel.setText("Moon-Object angle");

        barjdlabel.setFont(new java.awt.Font("Arial", 1, 14));
        barjdlabel.setForeground(new java.awt.Color(0, 255, 255));
        barjdlabel.setText("Bary. JD");

        baryvcorlabel.setFont(new java.awt.Font("Arial", 1, 14));
        baryvcorlabel.setForeground(new java.awt.Color(0, 255, 255));
        baryvcorlabel.setText("Bary. Vcorrn");

        constellationlabel.setFont(new java.awt.Font("Arial", 1, 14));
        constellationlabel.setForeground(new java.awt.Color(0, 255, 255));
        constellationlabel.setText("Constellation");

        planetproximlabel.setFont(new java.awt.Font("Arial", 1, 14));
        planetproximlabel.setForeground(new java.awt.Color(0, 255, 255));
        planetproximlabel.setText("Planet Warning");

        siderialfield.setBackground(new java.awt.Color(0, 0, 0));
        siderialfield.setEditable(false);
        siderialfield.setFont(new java.awt.Font("Arial", 1, 14));
        siderialfield.setForeground(new java.awt.Color(51, 255, 0));
        siderialfield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        airmassfield.setBackground(new java.awt.Color(0, 0, 0));
        airmassfield.setEditable(false);
        airmassfield.setFont(new java.awt.Font("Arial", 1, 14));
        airmassfield.setForeground(new java.awt.Color(51, 255, 0));
        airmassfield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        sunrafield.setBackground(new java.awt.Color(0, 0, 0));
        sunrafield.setEditable(false);
        sunrafield.setFont(new java.awt.Font("Arial", 1, 14));
        sunrafield.setForeground(new java.awt.Color(51, 255, 0));
        sunrafield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jdfield.setBackground(new java.awt.Color(0, 0, 0));
        jdfield.setEditable(false);
        jdfield.setFont(new java.awt.Font("Arial", 1, 14));
        jdfield.setForeground(new java.awt.Color(51, 255, 0));
        jdfield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        moonrafield.setBackground(new java.awt.Color(0, 0, 0));
        moonrafield.setEditable(false);
        moonrafield.setFont(new java.awt.Font("Arial", 1, 14));
        moonrafield.setForeground(new java.awt.Color(51, 255, 0));
        moonrafield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        sunaltfield.setBackground(new java.awt.Color(0, 0, 0));
        sunaltfield.setEditable(false);
        sunaltfield.setFont(new java.awt.Font("Arial", 1, 14));
        sunaltfield.setForeground(new java.awt.Color(51, 255, 0));
        sunaltfield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lunarskybrightfield.setBackground(new java.awt.Color(0, 0, 0));
        lunarskybrightfield.setEditable(false);
        lunarskybrightfield.setFont(new java.awt.Font("Arial", 1, 14));
        lunarskybrightfield.setForeground(new java.awt.Color(51, 255, 0));
        lunarskybrightfield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        sunazfield.setBackground(new java.awt.Color(0, 0, 0));
        sunazfield.setEditable(false);
        sunazfield.setFont(new java.awt.Font("Arial", 1, 14));
        sunazfield.setForeground(new java.awt.Color(51, 255, 0));
        sunazfield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        moonaltfield.setBackground(new java.awt.Color(0, 0, 0));
        moonaltfield.setEditable(false);
        moonaltfield.setFont(new java.awt.Font("Arial", 1, 14));
        moonaltfield.setForeground(new java.awt.Color(51, 255, 0));
        moonaltfield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        moonazfield.setBackground(new java.awt.Color(0, 0, 0));
        moonazfield.setEditable(false);
        moonazfield.setFont(new java.awt.Font("Arial", 1, 14));
        moonazfield.setForeground(new java.awt.Color(51, 255, 0));
        moonazfield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        constellationfield.setBackground(new java.awt.Color(0, 0, 0));
        constellationfield.setEditable(false);
        constellationfield.setFont(new java.awt.Font("Arial", 1, 14));
        constellationfield.setForeground(new java.awt.Color(51, 255, 0));
        constellationfield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        parallacticfield.setBackground(new java.awt.Color(0, 0, 0));
        parallacticfield.setEditable(false);
        parallacticfield.setFont(new java.awt.Font("Arial", 1, 14));
        parallacticfield.setForeground(new java.awt.Color(51, 255, 0));
        parallacticfield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        antiparallacticfield.setBackground(new java.awt.Color(0, 0, 0));
        antiparallacticfield.setEditable(false);
        antiparallacticfield.setFont(new java.awt.Font("Arial", 1, 14));
        antiparallacticfield.setForeground(new java.awt.Color(51, 255, 0));
        antiparallacticfield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        moonobjanglefield.setBackground(new java.awt.Color(0, 0, 0));
        moonobjanglefield.setEditable(false);
        moonobjanglefield.setFont(new java.awt.Font("Arial", 1, 14));
        moonobjanglefield.setForeground(new java.awt.Color(51, 255, 0));
        moonobjanglefield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        moonillumfield.setBackground(new java.awt.Color(0, 0, 0));
        moonillumfield.setEditable(false);
        moonillumfield.setFont(new java.awt.Font("Arial", 1, 14));
        moonillumfield.setForeground(new java.awt.Color(51, 255, 0));
        moonillumfield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        ztwilightfield.setBackground(new java.awt.Color(0, 0, 0));
        ztwilightfield.setEditable(false);
        ztwilightfield.setFont(new java.awt.Font("Arial", 1, 14));
        ztwilightfield.setForeground(new java.awt.Color(51, 255, 0));
        ztwilightfield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        moonphasefield.setBackground(new java.awt.Color(0, 0, 0));
        moonphasefield.setEditable(false);
        moonphasefield.setFont(new java.awt.Font("Arial", 1, 18));
        moonphasefield.setForeground(new java.awt.Color(51, 255, 0));
        moonphasefield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        planetproximfield.setBackground(new java.awt.Color(0, 0, 0));
        planetproximfield.setEditable(false);
        planetproximfield.setFont(new java.awt.Font("Arial", 1, 14));
        planetproximfield.setForeground(new java.awt.Color(51, 255, 0));
        planetproximfield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/caltech/palomar/telescopes/P200/simulator/resources/JThorstenson4.jpg"))); // NOI18N

        altitudefield.setBackground(new java.awt.Color(0, 0, 0));
        altitudefield.setEditable(false);
        altitudefield.setFont(new java.awt.Font("Arial", 1, 14));
        altitudefield.setForeground(new java.awt.Color(51, 255, 0));
        altitudefield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        sundecfield.setBackground(new java.awt.Color(0, 0, 0));
        sundecfield.setEditable(false);
        sundecfield.setFont(new java.awt.Font("Arial", 1, 14));
        sundecfield.setForeground(new java.awt.Color(51, 255, 0));
        sundecfield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        moondecfield.setBackground(new java.awt.Color(0, 0, 0));
        moondecfield.setEditable(false);
        moondecfield.setFont(new java.awt.Font("Arial", 1, 14));
        moondecfield.setForeground(new java.awt.Color(51, 255, 0));
        moondecfield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        baryjdfield.setBackground(new java.awt.Color(0, 0, 0));
        baryjdfield.setEditable(false);
        baryjdfield.setFont(new java.awt.Font("Arial", 1, 14));
        baryjdfield.setForeground(new java.awt.Color(51, 255, 0));
        baryjdfield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        baryvcorfield.setBackground(new java.awt.Color(0, 0, 0));
        baryvcorfield.setEditable(false);
        baryvcorfield.setFont(new java.awt.Font("Arial", 1, 14));
        baryvcorfield.setForeground(new java.awt.Color(51, 255, 0));
        baryvcorfield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        azimuthfield.setBackground(new java.awt.Color(0, 0, 0));
        azimuthfield.setEditable(false);
        azimuthfield.setFont(new java.awt.Font("Arial", 1, 14));
        azimuthfield.setForeground(new java.awt.Color(51, 255, 0));
        azimuthfield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        sideriallabel1.setFont(new java.awt.Font("Arial", 1, 14));
        sideriallabel1.setForeground(new java.awt.Color(0, 255, 255));
        sideriallabel1.setText("Siderial Time");

        declabel.setFont(new java.awt.Font("Arial", 1, 18));
        declabel.setForeground(new java.awt.Color(0, 255, 255));
        declabel.setText("Declination");

        jdlabel.setFont(new java.awt.Font("Arial", 1, 14));
        jdlabel.setForeground(new java.awt.Color(0, 255, 255));
        jdlabel.setText("Julian Date");

        equinoxfield.setBackground(new java.awt.Color(0, 0, 0));
        equinoxfield.setEditable(false);
        equinoxfield.setFont(new java.awt.Font("Arial", 1, 14));
        equinoxfield.setForeground(new java.awt.Color(51, 255, 0));
        equinoxfield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        RAfield.setBackground(new java.awt.Color(0, 0, 0));
        RAfield.setEditable(false);
        RAfield.setFont(new java.awt.Font("Arial", 1, 18));
        RAfield.setForeground(new java.awt.Color(0, 255, 0));
        RAfield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        altitudelabel.setFont(new java.awt.Font("Arial", 1, 14));
        altitudelabel.setForeground(new java.awt.Color(0, 255, 255));
        altitudelabel.setText("Altitude");

        sunralabel.setFont(new java.awt.Font("Arial", 1, 14));
        sunralabel.setForeground(new java.awt.Color(0, 255, 255));
        sunralabel.setText("Sun RA ");

        moonralabel.setFont(new java.awt.Font("Arial", 1, 14));
        moonralabel.setForeground(new java.awt.Color(0, 255, 255));
        moonralabel.setText("Moon RA");

        sunaltlabel.setFont(new java.awt.Font("Arial", 1, 14));
        sunaltlabel.setForeground(new java.awt.Color(0, 255, 255));
        sunaltlabel.setText("Sun Altitude");

        moonaltlabel.setFont(new java.awt.Font("Arial", 1, 14));
        moonaltlabel.setForeground(new java.awt.Color(0, 255, 255));
        moonaltlabel.setText("Moon Altitude");

        parallacticlabel1.setFont(new java.awt.Font("Arial", 1, 14));
        parallacticlabel1.setForeground(new java.awt.Color(0, 255, 255));
        parallacticlabel1.setText("parallactic ");

        ralabel.setFont(new java.awt.Font("Arial", 1, 18));
        ralabel.setForeground(new java.awt.Color(0, 255, 255));
        ralabel.setText("Right Ascension");

        observatorylabel.setFont(new java.awt.Font("Arial", 1, 14));
        observatorylabel.setForeground(new java.awt.Color(0, 255, 255));
        observatorylabel.setText("Observatory Site");

        latitudelabel.setFont(new java.awt.Font("Arial", 1, 14));
        latitudelabel.setForeground(new java.awt.Color(0, 255, 255));
        latitudelabel.setText("Latitude");

        longitudelabel.setFont(new java.awt.Font("Arial", 1, 14));
        longitudelabel.setForeground(new java.awt.Color(0, 255, 255));
        longitudelabel.setText("Longitude");

        elevsealevellabel.setFont(new java.awt.Font("Arial", 1, 14));
        elevsealevellabel.setForeground(new java.awt.Color(0, 255, 255));
        elevsealevellabel.setText("Elevation: Sea Level");

        sideriallabel9.setFont(new java.awt.Font("Arial", 1, 14));
        sideriallabel9.setForeground(new java.awt.Color(0, 255, 255));
        sideriallabel9.setText("Elevation: Horizon");

        decfield.setBackground(new java.awt.Color(0, 0, 0));
        decfield.setEditable(false);
        decfield.setFont(new java.awt.Font("Arial", 1, 18));
        decfield.setForeground(new java.awt.Color(51, 255, 0));
        decfield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        observatoryfield.setBackground(new java.awt.Color(0, 0, 0));
        observatoryfield.setEditable(false);
        observatoryfield.setFont(new java.awt.Font("Arial", 1, 14));
        observatoryfield.setForeground(new java.awt.Color(51, 255, 0));
        observatoryfield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        latitudefield.setBackground(new java.awt.Color(0, 0, 0));
        latitudefield.setEditable(false);
        latitudefield.setFont(new java.awt.Font("Arial", 1, 14));
        latitudefield.setForeground(new java.awt.Color(51, 255, 0));
        latitudefield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        longitudefield.setBackground(new java.awt.Color(0, 0, 0));
        longitudefield.setEditable(false);
        longitudefield.setFont(new java.awt.Font("Arial", 1, 14));
        longitudefield.setForeground(new java.awt.Color(51, 255, 0));
        longitudefield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        elevseafield.setBackground(new java.awt.Color(0, 0, 0));
        elevseafield.setEditable(false);
        elevseafield.setFont(new java.awt.Font("Arial", 1, 14));
        elevseafield.setForeground(new java.awt.Color(51, 255, 0));
        elevseafield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        elevhorizonlabel.setFont(new java.awt.Font("Arial", 1, 14));
        elevhorizonlabel.setForeground(new java.awt.Color(0, 255, 255));
        elevhorizonlabel.setText("Elevation: Horizon");

        localdatelabel.setFont(new java.awt.Font("Arial", 1, 14));
        localdatelabel.setForeground(new java.awt.Color(0, 255, 255));
        localdatelabel.setText("Local Date");

        utdatelabel.setFont(new java.awt.Font("Arial", 1, 14));
        utdatelabel.setForeground(new java.awt.Color(0, 255, 255));
        utdatelabel.setText("UT Date");

        uttimelabel.setFont(new java.awt.Font("Arial", 1, 14));
        uttimelabel.setForeground(new java.awt.Color(0, 255, 255));
        uttimelabel.setText("UT Time");

        timelabel.setFont(new java.awt.Font("Arial", 3, 18));
        timelabel.setForeground(new java.awt.Color(0, 255, 255));
        timelabel.setText("UT and Local Time");

        elevhorizonfield.setBackground(new java.awt.Color(0, 0, 0));
        elevhorizonfield.setEditable(false);
        elevhorizonfield.setFont(new java.awt.Font("Arial", 1, 14));
        elevhorizonfield.setForeground(new java.awt.Color(51, 255, 0));
        elevhorizonfield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        utdatefield.setBackground(new java.awt.Color(0, 0, 0));
        utdatefield.setEditable(false);
        utdatefield.setFont(new java.awt.Font("Arial", 1, 14));
        utdatefield.setForeground(new java.awt.Color(51, 255, 0));
        utdatefield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        uttimefield.setBackground(new java.awt.Color(0, 0, 0));
        uttimefield.setEditable(false);
        uttimefield.setFont(new java.awt.Font("Arial", 1, 14));
        uttimefield.setForeground(new java.awt.Color(51, 255, 0));
        uttimefield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        localdatefield.setBackground(new java.awt.Color(0, 0, 0));
        localdatefield.setEditable(false);
        localdatefield.setFont(new java.awt.Font("Arial", 1, 14));
        localdatefield.setForeground(new java.awt.Color(51, 255, 0));
        localdatefield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        localtimelabel.setFont(new java.awt.Font("Arial", 1, 14));
        localtimelabel.setForeground(new java.awt.Color(0, 255, 255));
        localtimelabel.setText("Local Time");

        localtimefield.setBackground(new java.awt.Color(0, 0, 0));
        localtimefield.setEditable(false);
        localtimefield.setFont(new java.awt.Font("Arial", 1, 14));
        localtimefield.setForeground(new java.awt.Color(51, 255, 0));
        localtimefield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        HAlabel1.setFont(new java.awt.Font("Arial", 1, 14));
        HAlabel1.setForeground(new java.awt.Color(0, 255, 255));
        HAlabel1.setText("Hour Angle");

        hafield.setBackground(new java.awt.Color(0, 0, 0));
        hafield.setEditable(false);
        hafield.setFont(new java.awt.Font("Arial", 1, 14));
        hafield.setForeground(new java.awt.Color(51, 255, 0));
        hafield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        objectnamelabel.setFont(new java.awt.Font("Arial", 1, 18));
        objectnamelabel.setForeground(new java.awt.Color(0, 255, 255));
        objectnamelabel.setText("Object Name");

        objectnamefield.setBackground(new java.awt.Color(0, 0, 0));
        objectnamefield.setEditable(false);
        objectnamefield.setFont(new java.awt.Font("Arial", 1, 24));
        objectnamefield.setForeground(new java.awt.Color(0, 255, 0));
        objectnamefield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        timelabel1.setFont(new java.awt.Font("Arial", 3, 18));
        timelabel1.setForeground(new java.awt.Color(0, 255, 255));
        timelabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/caltech/palomar/telescopes/P200/simulator/resources/Dartmouth2.jpg"))); // NOI18N

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/caltech/palomar/telescopes/P200/simulator/resources/CaltechAstronomy2.jpg"))); // NOI18N
        jLabel2.setText("jLabel2");

        jdlabel1.setBackground(new java.awt.Color(0, 0, 0));
        jdlabel1.setFont(new java.awt.Font("Arial", 1, 12));
        jdlabel1.setForeground(new java.awt.Color(255, 255, 255));
        jdlabel1.setText("* values may differ from those reported by the telescope");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(17, 17, 17)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(sunralabel)
                            .add(altitudelabel)
                            .add(sideriallabel1)
                            .add(airmasslabel)
                            .add(moonaltlabel)
                            .add(moonillumfraclabel)
                            .add(sunaltlabel)
                            .add(barjdlabel)
                            .add(parallacticlabel1)
                            .add(lunarskybrightlabel)
                            .add(moonralabel)
                            .add(moonphaselabel)
                            .add(constellationlabel)))
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(ralabel))
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(declabel))
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(objectnamelabel)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(siderialfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 130, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(airmassfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 130, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(altitudefield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 130, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(sunrafield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 128, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(moonrafield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 128, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(sunaltfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 128, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(moonaltfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 128, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(parallacticfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 128, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(baryjdfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 128, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(moonillumfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 128, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(lunarskybrightfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 130, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(constellationfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 130, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(10, 10, 10)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(equinoxlabel)
                            .add(HAlabel1)
                            .add(sunazimuthlabel)
                            .add(moondeclabel)
                            .add(moonobjanglabel)
                            .add(ztwilightlabel)
                            .add(sundeclabel)
                            .add(moonazimuthlabel)
                            .add(azimuthlabel)
                            .add(antiparallacticlabel)
                            .add(baryvcorlabel)
                            .add(planetproximlabel))
                        .add(3, 3, 3)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(hafield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 130, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(azimuthfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 128, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(sundecfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 128, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(moondecfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 128, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(sunazfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 128, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(moonazfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 128, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(antiparallacticfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 128, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(baryvcorfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 128, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(moonobjanglefield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 128, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(ztwilightfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 130, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(planetproximfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 130, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(layout.createSequentialGroup()
                                .add(19, 19, 19)
                                .add(equinoxfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 130, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .add(10, 10, 10)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(latitudelabel)
                                    .add(observatorylabel)
                                    .add(sideriallabel9)
                                    .add(elevsealevellabel)
                                    .add(elevhorizonlabel)
                                    .add(longitudelabel))
                                .add(11, 11, 11)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(observatoryfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 140, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(latitudefield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 140, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(longitudefield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 140, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(elevseafield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 140, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(elevhorizonfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 140, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, timelabel1)))
                            .add(layout.createSequentialGroup()
                                .add(50, 50, 50)
                                .add(timelabel))
                            .add(layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(utdatelabel)
                                    .add(uttimelabel))
                                .add(24, 24, 24)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(utdatefield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 210, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(uttimefield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 210, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                            .add(layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(localtimelabel)
                                    .add(localdatelabel))
                                .add(5, 5, 5)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(localdatefield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 210, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(localtimefield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 210, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                            .add(layout.createSequentialGroup()
                                .add(jdlabel)
                                .add(3, 3, 3)
                                .add(jdfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 210, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(objectnamefield)
                            .add(RAfield)
                            .add(decfield, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE))
                        .add(18, 18, 18)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(layout.createSequentialGroup()
                                .add(jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 88, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jLabel1))
                            .add(observatoryparamlabel)))
                    .add(layout.createSequentialGroup()
                        .add(moonphasefield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 311, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jdlabel1)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(34, 34, 34)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(objectnamelabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(objectnamefield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(ralabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(RAfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                            .add(jLabel1)
                            .add(timelabel1))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(declabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(decfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(observatoryparamlabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(layout.createSequentialGroup()
                        .add(28, 28, 28)
                        .add(jLabel2)))
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(21, 21, 21)
                        .add(siderialfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(airmassfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(altitudefield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(sunrafield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(moonrafield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(sunaltfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(moonaltfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(parallacticfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(baryjdfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(moonillumfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(lunarskybrightfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(constellationfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .add(20, 20, 20)
                        .add(equinoxlabel)
                        .add(4, 4, 4)
                        .add(HAlabel1)
                        .add(4, 4, 4)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(60, 60, 60)
                                .add(sunazimuthlabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(layout.createSequentialGroup()
                                .add(40, 40, 40)
                                .add(moondeclabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(layout.createSequentialGroup()
                                .add(140, 140, 140)
                                .add(moonobjanglabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(layout.createSequentialGroup()
                                .add(160, 160, 160)
                                .add(ztwilightlabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(layout.createSequentialGroup()
                                .add(20, 20, 20)
                                .add(sundeclabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(layout.createSequentialGroup()
                                .add(80, 80, 80)
                                .add(moonazimuthlabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(azimuthlabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(layout.createSequentialGroup()
                                .add(100, 100, 100)
                                .add(antiparallacticlabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(layout.createSequentialGroup()
                                .add(120, 120, 120)
                                .add(baryvcorlabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(layout.createSequentialGroup()
                                .add(180, 180, 180)
                                .add(planetproximlabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                    .add(layout.createSequentialGroup()
                        .add(21, 21, 21)
                        .add(equinoxfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(hafield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(azimuthfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(sundecfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(moondecfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(sunazfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(moonazfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(antiparallacticfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(baryvcorfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(moonobjanglefield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(ztwilightfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(planetproximfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(layout.createSequentialGroup()
                                        .add(20, 20, 20)
                                        .add(latitudelabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .add(observatorylabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .add(19, 19, 19)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(layout.createSequentialGroup()
                                        .add(20, 20, 20)
                                        .add(sideriallabel9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .add(elevsealevellabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(layout.createSequentialGroup()
                                        .add(20, 20, 20)
                                        .add(elevhorizonlabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                            .add(layout.createSequentialGroup()
                                .add(40, 40, 40)
                                .add(longitudelabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(layout.createSequentialGroup()
                                .add(observatoryfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(2, 2, 2)
                                .add(latitudefield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(2, 2, 2)
                                .add(longitudefield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(2, 2, 2)
                                .add(elevseafield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(2, 2, 2)
                                .add(elevhorizonfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .add(9, 9, 9)
                        .add(timelabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(9, 9, 9)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(utdatelabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(layout.createSequentialGroup()
                                .add(20, 20, 20)
                                .add(uttimelabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(layout.createSequentialGroup()
                                .add(utdatefield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(2, 2, 2)
                                .add(uttimefield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .add(9, 9, 9)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(20, 20, 20)
                                .add(localtimelabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(localdatelabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(layout.createSequentialGroup()
                                .add(localdatefield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(2, 2, 2)
                                .add(localtimefield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .add(10, 10, 10)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jdlabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jdfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(20, 20, 20)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(layout.createSequentialGroup()
                                        .add(60, 60, 60)
                                        .add(sunralabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .add(layout.createSequentialGroup()
                                        .add(40, 40, 40)
                                        .add(altitudelabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .add(sideriallabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(layout.createSequentialGroup()
                                        .add(20, 20, 20)
                                        .add(airmasslabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                                .add(19, 19, 19)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(layout.createSequentialGroup()
                                        .add(20, 20, 20)
                                        .add(moonaltlabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .add(layout.createSequentialGroup()
                                        .add(80, 80, 80)
                                        .add(moonillumfraclabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .add(sunaltlabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(layout.createSequentialGroup()
                                        .add(60, 60, 60)
                                        .add(barjdlabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .add(layout.createSequentialGroup()
                                        .add(40, 40, 40)
                                        .add(parallacticlabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .add(layout.createSequentialGroup()
                                        .add(100, 100, 100)
                                        .add(lunarskybrightlabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                            .add(layout.createSequentialGroup()
                                .add(100, 100, 100)
                                .add(moonralabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(constellationlabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(moonphaselabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(moonphasefield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(jdlabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel HAlabel1;
    private javax.swing.JTextField RAfield;
    private javax.swing.JTextField airmassfield;
    private javax.swing.JLabel airmasslabel;
    private javax.swing.JTextField altitudefield;
    private javax.swing.JLabel altitudelabel;
    private javax.swing.JTextField antiparallacticfield;
    private javax.swing.JLabel antiparallacticlabel;
    private javax.swing.JTextField azimuthfield;
    private javax.swing.JLabel azimuthlabel;
    private javax.swing.JLabel barjdlabel;
    private javax.swing.JTextField baryjdfield;
    private javax.swing.JTextField baryvcorfield;
    private javax.swing.JLabel baryvcorlabel;
    private javax.swing.JTextField constellationfield;
    private javax.swing.JLabel constellationlabel;
    private javax.swing.JTextField decfield;
    private javax.swing.JLabel declabel;
    private javax.swing.JTextField elevhorizonfield;
    private javax.swing.JLabel elevhorizonlabel;
    private javax.swing.JTextField elevseafield;
    private javax.swing.JLabel elevsealevellabel;
    private javax.swing.JTextField equinoxfield;
    private javax.swing.JLabel equinoxlabel;
    private javax.swing.JTextField hafield;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JTextField jdfield;
    private javax.swing.JLabel jdlabel;
    private javax.swing.JLabel jdlabel1;
    private javax.swing.JTextField latitudefield;
    private javax.swing.JLabel latitudelabel;
    private javax.swing.JTextField localdatefield;
    private javax.swing.JLabel localdatelabel;
    private javax.swing.JTextField localtimefield;
    private javax.swing.JLabel localtimelabel;
    private javax.swing.JTextField longitudefield;
    private javax.swing.JLabel longitudelabel;
    private javax.swing.JTextField lunarskybrightfield;
    private javax.swing.JLabel lunarskybrightlabel;
    private javax.swing.JTextField moonaltfield;
    private javax.swing.JLabel moonaltlabel;
    private javax.swing.JTextField moonazfield;
    private javax.swing.JLabel moonazimuthlabel;
    private javax.swing.JTextField moondecfield;
    private javax.swing.JLabel moondeclabel;
    private javax.swing.JTextField moonillumfield;
    private javax.swing.JLabel moonillumfraclabel;
    private javax.swing.JLabel moonobjanglabel;
    private javax.swing.JTextField moonobjanglefield;
    private javax.swing.JTextField moonphasefield;
    private javax.swing.JLabel moonphaselabel;
    private javax.swing.JTextField moonrafield;
    private javax.swing.JLabel moonralabel;
    private javax.swing.JTextField objectnamefield;
    private javax.swing.JLabel objectnamelabel;
    private javax.swing.JTextField observatoryfield;
    private javax.swing.JLabel observatorylabel;
    private javax.swing.JLabel observatoryparamlabel;
    private javax.swing.JTextField parallacticfield;
    private javax.swing.JLabel parallacticlabel1;
    private javax.swing.JTextField planetproximfield;
    private javax.swing.JLabel planetproximlabel;
    private javax.swing.JLabel ralabel;
    private javax.swing.JTextField siderialfield;
    private javax.swing.JLabel sideriallabel1;
    private javax.swing.JLabel sideriallabel9;
    private javax.swing.JTextField sunaltfield;
    private javax.swing.JLabel sunaltlabel;
    private javax.swing.JTextField sunazfield;
    private javax.swing.JLabel sunazimuthlabel;
    private javax.swing.JTextField sundecfield;
    private javax.swing.JLabel sundeclabel;
    private javax.swing.JTextField sunrafield;
    private javax.swing.JLabel sunralabel;
    private javax.swing.JLabel timelabel;
    private javax.swing.JLabel timelabel1;
    private javax.swing.JTextField utdatefield;
    private javax.swing.JLabel utdatelabel;
    private javax.swing.JTextField uttimefield;
    private javax.swing.JLabel uttimelabel;
    private javax.swing.JTextField ztwilightfield;
    private javax.swing.JLabel ztwilightlabel;
    // End of variables declaration//GEN-END:variables
/*=============================================================================================
/     Property Change Listener for the Ephemeris_propertyChange
/=============================================================================================*/
  private void Ephemeris_propertyChange(PropertyChangeEvent e)  {
     java.lang.String propertyName = e.getPropertyName();
/*=============================================================================================
/    PARAMETERS FROM THE JSKYCALCMODEL
/=============================================================================================*/
    if(propertyName == "jd_string"){
        java.lang.String newValue = (java.lang.String)e.getNewValue();
        jdfield.setText(newValue);
    }
    if(propertyName == "moonobj_string"){
        java.lang.String newValue = (java.lang.String)e.getNewValue();
        moonobjanglefield.setText(newValue);
    }
    if(propertyName == "baryjd_string"){
        java.lang.String newValue = (java.lang.String)e.getNewValue();
        baryjdfield.setText(newValue);
    }
    if(propertyName == "baryvcor_string"){
        java.lang.String newValue = (java.lang.String)e.getNewValue();
        baryvcorfield.setText(newValue);
    }
    if(propertyName == "barytcor_string"){
        java.lang.String newValue = (java.lang.String)e.getNewValue();
        baryvcorfield.setText(newValue);
    }
    if(propertyName == "constellation"){
        java.lang.String newValue = (java.lang.String)e.getNewValue();
        constellationfield.setText(newValue);
    }
    if(propertyName == "planetwarning"){
        java.lang.String newValue = (java.lang.String)e.getNewValue();
        planetproximfield.setText(newValue);
    }
    if(propertyName == "moonra_string"){
        java.lang.String newValue = (java.lang.String)e.getNewValue();
        moonrafield.setText(newValue);
    }
    if(propertyName == "moondec_string"){
        java.lang.String newValue = (java.lang.String)e.getNewValue();
        moondecfield.setText(newValue);
    }
    if(propertyName == "altmoon_string"){
        java.lang.String newValue = (java.lang.String)e.getNewValue();
        moonaltfield.setText(newValue);
    }
    if(propertyName == "azmoon_string"){
        java.lang.String newValue = (java.lang.String)e.getNewValue();
        moonazfield.setText(newValue);
    }
    if(propertyName == "sunra_string"){
        java.lang.String newValue = (java.lang.String)e.getNewValue();
        sunrafield.setText(newValue);
    }
    if(propertyName == "sundec_string"){
        java.lang.String newValue = (java.lang.String)e.getNewValue();
        sundecfield.setText(newValue);
    }
    if(propertyName == "altsun_string"){
        java.lang.String newValue = (java.lang.String)e.getNewValue();
        sunaltfield.setText(newValue);
    }
    if(propertyName == "azsun_string"){
        java.lang.String newValue = (java.lang.String)e.getNewValue();
        sunazfield.setText(newValue);
    }
    if(propertyName == "ztwilight_string"){
        java.lang.String newValue = (java.lang.String)e.getNewValue();
        ztwilightfield.setText(newValue);
    }
    if(propertyName == "moonphasedescription"){
        java.lang.String newValue = (java.lang.String)e.getNewValue();
        moonphasefield.setText(newValue);
    }
    if(propertyName == "siderialobj_string"){
        java.lang.String newValue = (java.lang.String)e.getNewValue();
        siderialfield.setText(newValue);
    }
    if(propertyName == "ha_string"){
        java.lang.String newValue = (java.lang.String)e.getNewValue();
        hafield.setText(newValue);
    }
    if(propertyName == "airmass_string"){
        java.lang.String newValue = (java.lang.String)e.getNewValue();
        airmassfield.setText(newValue);
    }
    if(propertyName == "parallactic_string"){
        java.lang.String newValue = (java.lang.String)e.getNewValue();
        parallacticfield.setText(newValue);
    }
    if(propertyName == "altparallactic_string"){
        java.lang.String newValue = (java.lang.String)e.getNewValue();
        antiparallacticfield.setText(newValue);
    }
    if(propertyName == "moonlight_string"){
        java.lang.String newValue = (java.lang.String)e.getNewValue();
    }
    if(propertyName == "moonillum_string"){
        java.lang.String newValue = (java.lang.String)e.getNewValue();
        moonillumfield.setText(newValue);
    }
    if(propertyName == "ra_string"){
        java.lang.String newValue = (java.lang.String)e.getNewValue();
        RAfield.setText(newValue);
    }
    if(propertyName == "dec_string"){
        java.lang.String newValue = (java.lang.String)e.getNewValue();
        decfield.setText(newValue);
    }
    if(propertyName == "equinox_string"){
        java.lang.String newValue = (java.lang.String)e.getNewValue();
        equinoxfield.setText(newValue);
    }
    if(propertyName == "azimuth_string"){
        java.lang.String newValue = (java.lang.String)e.getNewValue();
        azimuthfield.setText(newValue);
    }
    if(propertyName == "altitude_string"){
        java.lang.String newValue = (java.lang.String)e.getNewValue();
        altitudefield.setText(newValue);
    }
    if(propertyName == "UTDateDate"){
        java.lang.String newValue = (java.lang.String)e.getNewValue();
        utdatefield.setText(newValue);
    }
    if(propertyName == "UTDateTime"){
        java.lang.String newValue = (java.lang.String)e.getNewValue();
        uttimefield.setText(newValue);
    }
    if(propertyName == "localDateDate"){
        java.lang.String newValue = (java.lang.String)e.getNewValue();
        localdatefield.setText(newValue);
    }
    if(propertyName == "localDateTime"){
        java.lang.String newValue = (java.lang.String)e.getNewValue();
        localtimefield.setText(newValue);
    }
    if(propertyName == "obsname"){
        java.lang.String newValue = (java.lang.String)e.getNewValue();
        observatoryfield.setText(newValue);
    }
    if(propertyName == "longitude_string"){
        java.lang.String newValue = (java.lang.String)e.getNewValue();
        longitudefield.setText(newValue);
    }
    if(propertyName == "latitude_string"){
        java.lang.String newValue = (java.lang.String)e.getNewValue();
        latitudefield.setText(newValue);
    }
    if(propertyName == "elevsea_string"){
        java.lang.String newValue = (java.lang.String)e.getNewValue();
        elevseafield.setText(newValue);
    }
    if(propertyName == "elevhorizon_string"){
        java.lang.String newValue = (java.lang.String)e.getNewValue();
        elevhorizonfield.setText(newValue);
    }
    if(propertyName == "stdz_string"){
        java.lang.String newValue = (java.lang.String)e.getNewValue();
    }
    if(propertyName == "use_dst_string"){
        java.lang.String newValue = (java.lang.String)e.getNewValue();
    }
    if(propertyName == "zonename_string"){
        java.lang.String newValue = (java.lang.String)e.getNewValue();
    }
    if(propertyName == "nearestBrightStar"){
        java.lang.String newValue = (java.lang.String)e.getNewValue();
    }
    if(propertyName == "objectname_string"){
        java.lang.String newValue = (java.lang.String)e.getNewValue();
        objectnamefield.setText(newValue);
    }
  }
}
