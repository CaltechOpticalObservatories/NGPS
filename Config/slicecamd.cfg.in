# configuration file for slicecam daemon
# @SLICECAMD_CFG_COMMENT@
#
LOGPATH=/data/logs/
BLKPORT=@SLICECAMD_BLK_PORT@          # server blocking port
NBPORT=@SLICECAMD_NB_PORT@            # server non-blocking port
DAEMON=no                         # is this run as a daemon?
STDOUT=/tmp/slicecamd.stdout          # where to send stdout
STDERR=/tmp/slicecamd.stderr          # where to send stderr
MESSAGEPORT=@MESSAGEPORT@
MESSAGEGROUP=239.1.1.234          # or set to NONE if not using ASYNC messaging

# daemon ports
# These are the ports for other daemons that slicecamd talks to
#
TCSD_PORT=@TCSD_BLK_PORT@

# ANDOR=( <name> <sn> <scale> )
# For each slice camera specify:
#       <name>  name which is expected to be { L R }
#       <sn>    Andor serial number (or "emulate")
#       <scale> pixel scale in arcsec/pixel
# There should be one "L" camera and one "R" camera, which
# designates left and right, respectively, the perspective
# as shown in the GUI.
#
# NOTE: Set <sn> to "emulate" to emulate that camera.
#       If emulated, the serial number will be internally
#       generated as 1001 for L and 1002 for R.
#
ANDOR=(L emulate 0.06)
ANDOR=(R emulate 0.06)
#ANDOR=(L 13452 0.06)
#ANDOR=(R 13453 0.06)

# PUSH_GUI_SETTINGS=<file>
# This defines the shell script which pushes settings to the
# SAOimage GUI display.
#
PUSH_GUI_SETTINGS=/home/developer/Software/GuiderGUI/push_settings_slicev.sh

# PUSH_GUI_IMAGE=<file>
# This defines the shell script which pushes images to the
# SAOimage GUI display.
#
PUSH_GUI_IMAGE=/home/developer/Software/GuiderGUI/push_image.sh

# SkySimulator options:
#   SKYSIM_IMAGE_SIZE=<is>   where <is> is integer
#   SKYSIM_CONE_BUFFER=<cb>  where <cb> is double-precision float
# Sets the keyword arguments "IMAGE_SIZE=<is> coneBuffer=<cb>"
# used for the Python skysim module.
#
SKYSIM_IMAGE_SIZE=2100
SKYSIM_CONE_BUFFER=2.05
