# configuration file for slicecam daemon
# @SLICECAMD_CFG_COMMENT@
#
LOGPATH=/data/logs/
BLKPORT=@SLICECAMD_BLK_PORT@          # server blocking port
NBPORT=@SLICECAMD_NB_PORT@            # server non-blocking port
DAEMON=no                         # is this run as a daemon?
STDOUT=/tmp/slicecamd.stdout          # where to send stdout
STDERR=/tmp/slicecamd.stderr          # where to send stderr
MESSAGEPORT=@MESSAGEPORT@
MESSAGEGROUP=239.1.1.234          # or set to NONE if not using ASYNC messaging

# Message pub/sub
# PUB_ENDPOINT=tcp://127.0.0.1:<PORT>
# SUB_ENDPOINT=tcp://127.0.0.1:<PORT>
# SUBSCRIBE_TO: topic(s) to subscribe to, enter one per line
#
PUB_ENDPOINT="tcp://127.0.0.1:@MESSAGE_BROKER_SUB_PORT@"
SUB_ENDPOINT="tcp://127.0.0.1:@MESSAGE_BROKER_PUB_PORT@"
SUBSCRIBE_TO=slitd

# daemon ports
# These are the ports for other daemons that slicecamd talks to
#
TCSD_PORT=@TCSD_BLK_PORT@
ACAMD_PORT=@ACAMD_BLK_PORT@

# ANDOR=( <name> [emulate] <sn> <scale> <hflip> <vflip> <rot> <temp> <hbin> <vbin> )
# For each slice camera specify:
#       <name>  name which is expected to be { L R }
#       <sn>    Andor serial number (or "emulate")
#       <scale> pixel scale in arcsec/pixel
#       <hflip> horizontal flip 1=enable 0=disable
#       <vflip> vertical flip 1=enable 0=disable
#       <rot>   rotate 90 deg: { cw ccw none }
#       <temp>  temperature setpoint in deg C
#       <hbin>  horizontal binning (power of 2)
#       <vbin>  vertical binning (power of 2)
# There should be one "L" camera and one "R" camera, which
# designates left and right, respectively, the perspective
# as shown in the GUI.
#
# Include "emulate" to emulate the Andor and use a serial number in {1001,1002,...,1008}.
#
#ANDOR=(L emulate 1002 0.06 1 1 none 0 4 4)
#ANDOR=(R emulate 1003 0.06 1 1 none 0 4 4)
ANDOR=(L 14223 0.06 1 1 none -60 4 4)
ANDOR=(R 10333 0.06 0 0 none -60 4 4)  # from DBSP
#ANDOR=(R 13452 0.06 0 0 none -60 4 4) # s/n for ACAM

# PUSH_GUI_SETTINGS=<file>
# This defines the shell script which pushes settings to the
# SAOimage GUI display.
#
PUSH_GUI_SETTINGS=/home/developer/Software/GuiderGUI/push_settings_slicev.sh

# PUSH_GUI_IMAGE=<file>
# This defines the shell script which pushes images to the
# SAOimage GUI display.
#
PUSH_GUI_IMAGE=/home/developer/Software/GuiderGUI/push_image.sh

# SkySimulator options:
#   SKYSIM_IMAGE_SIZE=<is>   where <is> is integer
# Sets the keyword argument "IMAGE_SIZE=<is>"
# used for the Python skysim module.
#
SKYSIM_IMAGE_SIZE=1024
