# -----------------------------------------------------------------------------
# configuration file for camerad
# @CAMERAD_CFG_COMMENT@
# -----------------------------------------------------------------------------
GIT_HASH=@GIT_COMMIT_HASH@            # git commit hash
PROJ_BUILD_DATE=@PROJECT_BUILD_DATE@  # the last time make was run
# -----------------------------------------------------------------------------
IMDIR=/data                       # default root directory for images
BASENAME=swift                    # default basename for images
BLKPORT=@CAMERAD_BLK_PORT@        # server blocking port
NBPORT=@CAMERAD_NB_PORT@          # server non-blocking port
LOGPATH=/data/logs/               # fully qualified path to save log files
ASYNCPORT=@MESSAGEPORT@
ASYNCGROUP=239.1.1.234            # or set to NONE if not using ASYNC messaging
DAEMON=no                        # run as a daemon? {yes,no}

# -----------------------------------------------------------------------------
# The following are for simulated ARC controllers
ARCSIM_NUMDEV=0

# -----------------------------------------------------------------------------
# Each camera controller is defined by
# CONTROLLER=(PCIDEV CHAN FT FIRMWARE)
# where PCIDEV    the PCI device number {0,1,2,3}
#       CHAN      the channel name {U,R,I,G}
#       CCDID     CCD Identifier (E.G. serial number, name, etc.)
#       FT        {yes|no} indicates Frame Transfer is supported (doesn't enable it)
#       FIRMWARE  the default firmware to load
#       READOUT   the default readout amplifier {U1,L1,U2,L2,SPLIT1,SPLIT2,QUAD,FT1,FT2}
#
### I CHANNEL LODFILE HAS BEEN CHANGED FOR DEBUGGING  --CHAZ
#CONTROLLER=(0 I sg2 yes /home/developer/Software/DSP/lod/sg2_48khz_ft.lod SPLIT1)
#CONTROLLER=(1 R sg2 yes /home/developer/Software/DSP/lod/sg2_48khz_ft.lod SPLIT1)
CONTROLLER=(0 I sg2 yes /home/developer/Software/DSP/lod/sg2_test.lod SPLIT1)
CONTROLLER=(1 R sg2 yes /home/developer/Software/DSP/lod/sg2_test.lod SPLIT1)
#CONTROLLER=(1 R engg yes /home/developer/Software/DSP/lod/engg_48khz_ft.lod.lod SPLIT1)

# -----------------------------------------------------------------------------
# This defines the default image size and binning for each controller.
#
# IMAGE_SIZE=(CHAN ROWS COLS OSROWS OSCOLS BINROWS BINCOLS)
#
# where CHAN      must correspond to a CHAN defined in CONTROLLER key above
#       ROWS      number of rows in image
#       COLS      number of columns in image
#       OSROWS    number of overscan rows
#       OSCOLS    number of overscan columns
#       BINROWS   bin factor rows
#       BINCOLS   bin factor cols
#
IMAGE_SIZE=(I 1020 4114 50 20 1 1)
IMAGE_SIZE=(R 1020 4114 50 20 1 1)

# -----------------------------------------------------------------------------
# Detector orientation of ROWS/COLS with respect to X,Y axes
# DET_ORIENTATION=(CHAN X Y)
# where CHAN      must correspond to a CHAN defined in CONTROLLER key above
#       X         is {ROW,COL} for the x-axis
#       Y         is {ROW,COL} for the y-axis
#
DET_ORIENTATION=(I COL ROW)
DET_ORIENTATION=(R COL ROW)
DET_ORIENTATION=(G COL ROW)
DET_ORIENTATION=(U ROW COL)

# -----------------------------------------------------------------------------
# Optional axis labels. If not specified then the x-axis is named "X"
# and the y-axis is named "Y". Must not contain spaces.
#
#   AXIS_LABEL_X= <label for x-axis>
#   AXIS_LABEL_Y= <label for y-axis>
#
DET_AXIS_LABEL_X=spec
DET_AXIS_LABEL_Y=spat

# -----------------------------------------------------------------------------
# Disabling the BONN_SHUTTER is only for when the Bonn shutter is not present.
# Under normal operations this should be set to yes.  When set to no then no
# attempt will be made to initialize or communicate with the shutter.
#
BONN_SHUTTER=yes

# -----------------------------------------------------------------------------
# SHUTTER_DELAY is a whole number in milliseconds to wait after closing the
# shuter before reading out. Max delay is 3000 ms.
#
SHUTTER_DELAY=0

# -----------------------------------------------------------------------------
# An external shutter trigger can be enabled. If EXT_SHUTTER is yes, then
# openshutter/closeshutter commands will be sent to the ARC controller
# at the start/stop of each exposure to operate the controller's shutter
# trigger. This works independently of the state of BONN_SHUTTER.
#
EXT_SHUTTER=no

# -----------------------------------------------------------------------------
# Constant FITS header keywords, added to every FITS file, grouped
# by PRImary and EXTensions.
#
# Provide keyword, value and optional comment.  If the <comment> contains
# spaces then it must be enclosed in double quotes, i.e. "this is a comment".
#

# Primary HDU
# CONSTKEY_PRI=( <keyword> <value> [ <comment> ] )
#
CONSTKEY_PRI=(INSTRUME NGPS "name of instrument")
CONSTKEY_PRI=(TELESCOP P200 "name of telescope")
CONSTKEY_PRI=(OBSLON -116.8583299 "Observatory longitude")
CONSTKEY_PRI=(OBSLAT 33.353498586 "Observatory latitude")

# Secondary Extensions
# CONSTKEY_EXT=( <keyword> <value> [ <comment> ] )
#
CONSTKEY_EXT=(CUNIT1A Angstrom)
CONSTKEY_EXT=(CUNIT2A arcsec)
CONSTKEY_EXT=(WCSNAMEA SPECTRUM)
CONSTKEY_EXT=(WCSNAME DISPLAY)
CONSTKEY_EXT=(PCOUNT 0)
CONSTKEY_EXT=(GCOUNT 1)

# Should user-supplied keywords persist, or be cleared
# after each exposure?
# USERKEYS_PERSIST=yes|no
#
USERKEYS_PERSIST=no

# -----------------------------------------------------------------------------
# TELEM_PROVIDER=( <name> <port> )
#
# This is a list of telemetry providers where <name> is the daemon name,
# and <port> is the port on which to send the telemetry request. These are the
# sources for telemetry information for FITS headers. Provide one per line.
#
TELEM_PROVIDER=(calibd   @CALIBD_NB_PORT@)
TELEM_PROVIDER=(flexured @FLEXURED_NB_PORT@)
TELEM_PROVIDER=(focusd   @FOCUSD_NB_PORT@)
TELEM_PROVIDER=(tcsd     @TCSD_NB_PORT@)
TELEM_PROVIDER=(powerd   @POWERD_NB_PORT@)
