# configuration file for acam daemon
# @ACAMD_CFG_COMMENT@
#
LOGPATH=/data/logs/
BLKPORT=@ACAMD_BLK_PORT@          # server blocking port
NBPORT=@ACAMD_NB_PORT@            # server non-blocking port
DAEMON=no                         # is this run as a daemon?
STDOUT=/tmp/acamd.stdout          # where to send stdout
STDERR=/tmp/acamd.stderr          # where to send stderr
MESSAGEPORT=@MESSAGEPORT@
MESSAGEGROUP=239.1.1.234          # or set to NONE if not using ASYNC messaging

# Message pub/sub
# PUB_ENDPOINT=tcp://127.0.0.1:<PORT>
# SUB_ENDPOINT=tcp://127.0.0.1:<PORT>
#
PUB_ENDPOINT="tcp://127.0.0.1:@MESSAGE_BROKER_SUB_PORT@"
SUB_ENDPOINT="tcp://127.0.0.1:@MESSAGE_BROKER_PUB_PORT@"

# database configuration
#
DB_HOST=localhost
DB_PORT=33060
DB_USER=telemlogger
DB_PASS=Password-123
DB_SCHEMA=telemetry
DB_TABLE=acamd

# daemon ports
# These are the ports for other daemons that acamd talks to
#
TCSD_PORT=@TCSD_BLK_PORT@

# this is the port number that the emulator listens to
#
EMULATOR_PORT=@ACAMD_EMULATOR@

# Specify the pixel scale, arcsec per pixel
#
PIXSCALE=0.26

# ANDOR=( <name> [emulate] <sn> <scale> <hflip> <vflip> <rot> <temp> <hbin> <vbin> )
#
#       <name>  name which is expected to be { L R }
#       <sn>    Andor serial number (or "emulate")
#       <scale> pixel scale in arcsec/pixel
#       <hflip> horizontal flip 1=enable 0=disable
#       <vflip> vertical flip 1=enable 0=disable
#       <rot>   rotate 90 deg: { cw ccw none }
#       <temp>  temperature setpoint in deg C
#       <hbin>  horizontal binning (power of 2)
#       <vbin>  vertical binning (power of 2)
#
# The name for acam is not used for anything but set here to conform
# to the general format for configuration.
#
# Include "emulate" to emulate the Andor and use a serial number in {1001,1002,...,1008}.
#
ANDOR=("acam" 13452 0.06 0 0 ccw -60 1 1)
#ANDOR=("acam" emulate 1001 0.06 0 0 ccw 0 1 1)

# PUSH_GUIDER_SETTINGS
# This defines the shell script which pushes guider settings to the
# SAOimage GUIDER display.
#
PUSH_GUIDER_SETTINGS=/home/developer/Software/GuiderGUI/push_settings_guider.sh

# PUSH_GUIDER_IMAGE
# This defines the shell script which pushes guider images to the
# SAOimage GUIDER display.
#
PUSH_GUIDER_IMAGE=/home/developer/Software/GuiderGUI/push_image.sh

# PUSH_GUIDER_MESSAGE
# This defines the shell script which pushes guider message to the
# SAOimage GUIDER display.
#
PUSH_GUIDER_MESSAGE=/home/developer/Software/GuiderGUI/message.sh

# ASTRONOMY SOLVER
#
# Optional key=value args to pass to the astrometry solver.
# List one per line and place within double quotes: SOLVER_ARGS="key=value"
#
#SOLVER_ARGS="lsq=true"
#SOLVER_ARGS="Ncatalog_max=100"
#SOLVER_ARGS="Ndetector_max=100"
#SOLVER_ARGS=

# MOTION CONTROL
#
# For each actuator's controller specify:
# MOTOR_CONTROLLER="<name> <host> <port> <addr> <axes>"
#   <name>  name of controller
#   <host>  hostname of controller
#   <port>  port on hostname
#   <addr>  address is DIP-switch assigned PI address.
#   <axes>  number of axes for this controller's actuator
#
# For acamd, one controller must be named "filter" and the other must be named "cover"
#
MOTOR_CONTROLLER="filter @IP_ETS8P@ @ETS8P_ACAM_MOTION@ 1 1"
MOTOR_CONTROLLER="cover  @IP_ETS8P@ @ETS8P_ACAM_MOTION@ 2 1"
#MOTOR_CONTROLLER="filter localhost @ACAMD_EMULATOR@ 1 1"     # emulator
#MOTOR_CONTROLLER="cover  localhost @ACAMD_EMULATOR@ 2 1"     # emulator

# For each actuator's controller specify:
# MOTOR_AXIS="<name> <axis> <min> <max> <zero> <ref>"
#  <name>  name of controller
#  <axis>  axis number
#  <min>   minimum allowed position
#  <max>   maxumum allowed position
#  <zero>  value to add to home position (max will be reduced by this amount)
#  <ref>   reference type {neg|pos|ref}
MOTOR_AXIS="filter 1 0 2385 0 pos"
MOTOR_AXIS="cover  1 0  504 0 neg"

# Specify named positions for each actuator
# MOTOR_POS="<name> <axis> <posid> <pos> <posname>"
#   <name>     name of controller, must have a corresponding MOTOR_CONTROLLER above
#   <axis>     axis number
#   <posid>    0-based incremental number {0,1,2,...}
#   <pos>      real actuator position
#   <posname>  name of that position, what the user will use
#

# These are for the Filter Wheel -- OK to change positionname as required!
# positionname is the filter name used to select the filter.
# ID here refers to the numbered positions on the filter. Do not change
# the position for a given ID. See orientation diagram below.
#
MOTOR_POS="filter 1 0    0 BLOCK"
MOTOR_POS="filter 1 1  477 G"
MOTOR_POS="filter 1 2  954 R"
MOTOR_POS="filter 1 3 1431 I"
MOTOR_POS="filter 1 4 1908 OPEN"
MOTOR_POS="filter 1 5 2385 CLEAR"

# These are for the dust cover -- no need to ever change these!
#
MOTOR_POS="cover 1 0   0 open"
MOTOR_POS="cover 1 1 504 close"

# Filter orientation, looking away from the sky, facing the camera.
# Shown in the "home" position. Numbers are the IDs used above.
#  o  = reference switch
#  c  = center of rotation
# [ ] = camera
#                   o 
#                      0
#                  1      [5]
#                      c
#                  2       4
#                      3

# ACAM Target acquisition
#
ACQUIRE_TIMEOUT=90            # seconds before ACAM acquisition sequence aborts on failure to acquire (REQUIRED!)
ACQUIRE_RETRYS=3              # max number of retrys before acquisition fails (optional, can be left blank to disable)
ACQUIRE_OFFSET_THRESHOLD=0.5  # computed offset below this threshold (in arcsec) defines successful acquisition
ACQUIRE_MIN_REPEAT=2          # minimum number of sequential successful acquires
ACQUIRE_TCS_MAX_OFFSET=30     # the maximum allowable offset sent to the TCS, in arcsec

# SkySimulator options:
#   SKYSIM_IMAGE_SIZE=<is>   where <is> is integer
# Sets the keyword argument "IMAGE_SIZE=<is>"
# used for the Python skysim module.
#
SKYSIM_IMAGE_SIZE=1024

# -----------------------------------------------------------------------------
# TELEM_PROVIDER=( <name> <port> )
#
# This is a list of telemetry providers where <name> is the daemon name,
# and <port> is the port on which to send the telemetry request.
# Provide one per line.
#
TELEM_PROVIDER=(tcsd       @TCSD_NB_PORT@)
TELEM_PROVIDER=(sequencerd @SEQUENCERD_NB_PORT@)
#
SUBSCRIBE_TO=(tcsd       "tcp://127.0.0.1:@TCSD_PUB_PORT@")
SUBSCRIBE_TO=(sequencerd "tcp://127.0.0.1:@SEQUENCERD_PUB_PORT@")
