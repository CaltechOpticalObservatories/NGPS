# ----------------------------------------------------------------------------
# @file    acamd/CMakeLists.txt
# @brief   input to the CMake build system for building acam daemon
# @author  David Hale <dhale@caltech.edu>
# ----------------------------------------------------------------------------

cmake_minimum_required( VERSION 3.12 )

# Uncomment _one_ of these to select the source of real Andor images,
# either direct from the camera (ACAM_ANDOR_SOURCE_ANDOR) or via an
# external server (ACAM_ANDOR_SOURCE_SERVER) aka "the gui".
#
#add_definitions(-DACAM_ANDOR_SOURCE_SERVER)
add_definitions(-DACAM_ANDOR_SOURCE_ANDOR)

# Uncmoment this to use the Andor simulator
#
#add_definitions(-DANDORSIM)


#add_definitions( -Wall -ansi -O2 -Wno-variadic-macros -ggdb )
#add_definitions( -I/usr/include/python3.9 -I/usr/include/python3.9  -Wno-unused-result -Wsign-compare  -O2 -g -pipe -Wall -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -Wp,-D_GLIBCXX_ASSERTIONS -fexceptions -fstack-protector-strong -grecord-gcc-switches   -m64 -mtune=generic -fasynchronous-unwind-tables -fstack-clash-protection -fcf-protection -D_GNU_SOURCE -fPIC -fwrapv  -DDYNAMIC_ANNOTATIONS_ENABLED=1 -DNDEBUG  -O2 -g -pipe -Wall -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -Wp,-D_GLIBCXX_ASSERTIONS -fexceptions -fstack-protector-strong -grecord-gcc-switches   -m64 -mtune=generic -fasynchronous-unwind-tables -fstack-clash-protection -fcf-protection -D_GNU_SOURCE -fPIC -fwrapv )


set( ACAMD_DIR ${PROJECT_BASE_DIR}/acamd )

# C-Python API Development libraries and headers
#
find_path( PYTHON_DEV "Python.h" PATHS /usr/include/python3.9 )
find_library( PYTHON_LIB python3.9 NAMES libpython3.9 PATHS /usr/lib64 )
add_link_options( -L/usr/lib64 -lpython3.9 -lcrypt -lpthread -ldl  -lutil -lm -lm )

# CFITSIO, CCfits
#
find_library( CCFITS_LIB CCfits NAMES libCCfits PATHS /usr/local/lib )
find_library( CFITS_LIB cfitsio NAMES libcfitsio  PATHS /usr/local/lib )

include_directories( ${PROJECT_BASE_DIR}/utils )
include_directories( ${PROJECT_BASE_DIR}/PI )
include_directories( ${PROJECT_BASE_DIR}/Andor )
include_directories( ${PROJECT_BASE_DIR}/emulator )
include_directories( ${PROJECT_BASE_DIR}/common )
include_directories( ${PROJECT_BASE_DIR}/tcsd )
include_directories( ${PYTHON_DEV} )

set( EMULATOR_DIR ${PROJECT_BASE_DIR}/emulator )
add_library( andorsim STATIC
        ${EMULATOR_DIR}/andorsim.cpp
        ${EMULATOR_DIR}/atmcdLXdsim.cpp
        )
target_link_libraries( andorsim
        )

add_executable(acamd 
        ${ACAMD_DIR}/acamd.cpp 
        ${ACAMD_DIR}/acam_server.cpp 
        ${ACAMD_DIR}/acam_interface.cpp 
        ${ACAMD_DIR}/acam_fits.cpp
        ${ACAMD_DIR}/motion_interface.cpp 
        ${PYTHON_DEV}
        )

target_link_libraries(acamd
        andor
        python3.9
        physik_instrumente
        network
        common
        tcsd_client
        logentry
        utilities
        skyinfo
        ${PYTHON_LIB}
        ${CCFITS_LIB}
        ${CFITS_LIB}
        ${CMAKE_THREAD_LIBS_INIT}
        )

target_compile_options(acamd PRIVATE -g -Wall -O0 -Wno-variadic-macros -ggdb)

# Set the setgid bit on the resulting executable
add_custom_command( TARGET acamd POST_BUILD COMMAND chmod g+s $<TARGET_FILE:acamd> )

add_executable( newpytest
        ${ACAMD_DIR}/newpytest.cpp 
        ${PYTHON_DEV}
        )

target_link_libraries( newpytest
        python3.9
        ${PYTHON_LIB}
        )

add_executable( pytest
        ${ACAMD_DIR}/pytest.cpp 
        ${PYTHON_DEV}
        )

target_link_libraries( pytest
        python3.9
        ${PYTHON_LIB}
        )

# -- External Definitions ------------------------------------------------------
#
# The following external definitions keep the definitions in one place
# rather than in each of the config files. These include files are used to
# generate the .cfg files.
#
INCLUDE( ${PROJECT_BASE_DIR}/Config/portdefs )    # portdefs is the master list of ports
INCLUDE( ${PROJECT_BASE_DIR}/Config/ets8p )       # ports in the ETS8P terminal server
INCLUDE( ${PROJECT_BASE_DIR}/Config/privatelan )  # private IP addresses
set ( ACAMD_CFG_COMMENT "This file is automatically generated. Manual edits may be overwritten." )
CONFIGURE_FILE( ${PROJECT_BASE_DIR}/Config/acamd.cfg.in ${PROJECT_BASE_DIR}/Config/acamd.cfg )
